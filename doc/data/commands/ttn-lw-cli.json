{
  "ttn-lw-cli": {
    "short": "The Things Industries Command-line Interface",
    "path": "ttn-lw-cli",
    "subCommands": {
      "applications": {
        "short": "Application commands",
        "path": "ttn-lw-cli applications",
        "subCommands": {
          "activation-settings": {
            "short": "Application activation settings commands",
            "path": "ttn-lw-cli applications activation-settings",
            "subCommands": {
              "delete": {
                "short": "Delete application activation settings",
                "path": "ttn-lw-cli applications activation-settings delete"
              },
              "get": {
                "short": "Get application activation settings",
                "path": "ttn-lw-cli applications activation-settings get"
              },
              "set": {
                "short": "Set application activation settings",
                "path": "ttn-lw-cli applications activation-settings set"
              }
            }
          },
          "api-keys": {
            "short": "Manage application API keys",
            "path": "ttn-lw-cli applications api-keys",
            "subCommands": {
              "create": {
                "short": "Create an application API key",
                "path": "ttn-lw-cli applications api-keys create"
              },
              "delete": {
                "short": "Delete an application API key",
                "path": "ttn-lw-cli applications api-keys delete"
              },
              "get": {
                "short": "Get an application API key",
                "path": "ttn-lw-cli applications api-keys get"
              },
              "list": {
                "short": "List application API keys",
                "path": "ttn-lw-cli applications api-keys list"
              },
              "set": {
                "short": "Set properties of an application API key",
                "path": "ttn-lw-cli applications api-keys set"
              }
            }
          },
          "claim": {
            "short": "Manage claim settings in applications",
            "path": "ttn-lw-cli applications claim",
            "subCommands": {
              "authorize": {
                "short": "Authorize an application for claiming (EXPERIMENTAL)",
                "path": "ttn-lw-cli applications claim authorize"
              },
              "unauthorize": {
                "short": "Unauthorize an application for claiming (EXPERIMENTAL)",
                "path": "ttn-lw-cli applications claim unauthorize"
              }
            }
          },
          "collaborators": {
            "short": "Manage application collaborators",
            "path": "ttn-lw-cli applications collaborators",
            "subCommands": {
              "delete": {
                "short": "Delete an application collaborator",
                "path": "ttn-lw-cli applications collaborators delete"
              },
              "get": {
                "short": "Get an application collaborator",
                "path": "ttn-lw-cli applications collaborators get"
              },
              "list": {
                "short": "List application collaborators",
                "path": "ttn-lw-cli applications collaborators list"
              },
              "set": {
                "short": "Set properties of an application collaborator",
                "path": "ttn-lw-cli applications collaborators set"
              }
            }
          },
          "contact-info": {
            "short": "Manage application contact info",
            "path": "ttn-lw-cli applications contact-info",
            "subCommands": {
              "create": {
                "path": "ttn-lw-cli applications contact-info create"
              },
              "delete": {
                "path": "ttn-lw-cli applications contact-info delete"
              },
              "list": {
                "path": "ttn-lw-cli applications contact-info list"
              },
              "request-validation": {
                "short": "Request validation for entity contact info",
                "path": "ttn-lw-cli applications contact-info request-validation"
              },
              "validate": {
                "short": "Validate contact info",
                "path": "ttn-lw-cli applications contact-info validate"
              }
            }
          },
          "create": {
            "short": "Create an application",
            "path": "ttn-lw-cli applications create"
          },
          "delete": {
            "short": "Delete an application",
            "path": "ttn-lw-cli applications delete"
          },
          "get": {
            "short": "Get an application",
            "path": "ttn-lw-cli applications get"
          },
          "issue-dev-eui": {
            "short": "Issue DevEUI for application",
            "path": "ttn-lw-cli applications issue-dev-eui"
          },
          "link": {
            "short": "Application link commands",
            "path": "ttn-lw-cli applications link",
            "subCommands": {
              "delete": {
                "short": "Delete an application link",
                "path": "ttn-lw-cli applications link delete"
              },
              "get": {
                "short": "Get the properties of an application link",
                "path": "ttn-lw-cli applications link get"
              },
              "set": {
                "short": "Set the properties of an application link",
                "path": "ttn-lw-cli applications link set"
              }
            }
          },
          "list": {
            "short": "List applications",
            "path": "ttn-lw-cli applications list"
          },
          "packages": {
            "short": "Application packages commands",
            "path": "ttn-lw-cli applications packages",
            "subCommands": {
              "associations": {
                "short": "Application packages associations commands",
                "path": "ttn-lw-cli applications packages associations",
                "subCommands": {
                  "delete": {
                    "short": "Delete an application package association",
                    "path": "ttn-lw-cli applications packages associations delete"
                  },
                  "get": {
                    "short": "Get the properties of an application package association",
                    "path": "ttn-lw-cli applications packages associations get"
                  },
                  "list": {
                    "short": "List application package associations",
                    "path": "ttn-lw-cli applications packages associations list"
                  },
                  "set": {
                    "short": "Set the properties of an application package association",
                    "path": "ttn-lw-cli applications packages associations set"
                  }
                }
              },
              "default-associations": {
                "short": "Application packages default associations commands",
                "path": "ttn-lw-cli applications packages default-associations",
                "subCommands": {
                  "delete": {
                    "short": "Delete an application package default association",
                    "path": "ttn-lw-cli applications packages default-associations delete"
                  },
                  "get": {
                    "short": "Get the properties of an application package default association",
                    "path": "ttn-lw-cli applications packages default-associations get"
                  },
                  "list": {
                    "short": "List application package default associations",
                    "path": "ttn-lw-cli applications packages default-associations list"
                  },
                  "set": {
                    "short": "Set the properties of an application package default association",
                    "path": "ttn-lw-cli applications packages default-associations set"
                  }
                }
              },
              "list": {
                "short": "List the available application packages for the device",
                "path": "ttn-lw-cli applications packages list"
              }
            }
          },
          "pubsubs": {
            "short": "Application pub/sub commands",
            "path": "ttn-lw-cli applications pubsubs",
            "subCommands": {
              "delete": {
                "short": "Delete an application pub/sub",
                "path": "ttn-lw-cli applications pubsubs delete"
              },
              "get": {
                "short": "Get the properties of an application pub/sub",
                "path": "ttn-lw-cli applications pubsubs get"
              },
              "get-formats": {
                "short": "Get the available formats for application pubsubs",
                "path": "ttn-lw-cli applications pubsubs get-formats"
              },
              "list": {
                "short": "List application pubsubs",
                "path": "ttn-lw-cli applications pubsubs list"
              },
              "set": {
                "short": "Set the properties of an application pub/sub",
                "path": "ttn-lw-cli applications pubsubs set"
              }
            }
          },
          "purge": {
            "short": "Purge an application",
            "path": "ttn-lw-cli applications purge"
          },
          "restore": {
            "short": "Restore an application",
            "path": "ttn-lw-cli applications restore"
          },
          "rights": {
            "short": "List the rights to an application",
            "path": "ttn-lw-cli applications rights"
          },
          "search": {
            "short": "Search for applications",
            "path": "ttn-lw-cli applications search"
          },
          "set": {
            "short": "Set properties of an application",
            "path": "ttn-lw-cli applications set"
          },
          "storage": {
            "short": "Storage Integration",
            "path": "ttn-lw-cli applications storage",
            "subCommands": {
              "count": {
                "short": "Count stored upstream messages",
                "path": "ttn-lw-cli applications storage count"
              },
              "get": {
                "short": "Retrieve stored upstream messages",
                "path": "ttn-lw-cli applications storage get"
              }
            }
          },
          "subscribe": {
            "short": "Subscribe to application uplink",
            "path": "ttn-lw-cli applications subscribe"
          },
          "webhooks": {
            "short": "Application webhooks commands",
            "path": "ttn-lw-cli applications webhooks",
            "subCommands": {
              "delete": {
                "short": "Delete an application webhook",
                "path": "ttn-lw-cli applications webhooks delete"
              },
              "get": {
                "short": "Get the properties of an application webhook",
                "path": "ttn-lw-cli applications webhooks get"
              },
              "get-formats": {
                "short": "Get the available formats for application webhooks",
                "path": "ttn-lw-cli applications webhooks get-formats"
              },
              "list": {
                "short": "List application webhooks",
                "path": "ttn-lw-cli applications webhooks list"
              },
              "set": {
                "short": "Set the properties of an application webhook",
                "path": "ttn-lw-cli applications webhooks set"
              }
            }
          }
        }
      },
      "authentication-providers": {
        "short": "Authentication Provider commands",
        "path": "ttn-lw-cli authentication-providers",
        "subCommands": {
          "create": {
            "short": "Create an authentication provider",
            "path": "ttn-lw-cli authentication-providers create"
          },
          "delete": {
            "short": "Delete an authentication provider",
            "path": "ttn-lw-cli authentication-providers delete"
          },
          "get": {
            "short": "Get an authentication provider",
            "path": "ttn-lw-cli authentication-providers get"
          },
          "list": {
            "short": "List authentication providers",
            "path": "ttn-lw-cli authentication-providers list"
          },
          "update": {
            "short": "Update an authentication provider",
            "path": "ttn-lw-cli authentication-providers update"
          }
        }
      },
      "clients": {
        "short": "Client commands",
        "path": "ttn-lw-cli clients",
        "subCommands": {
          "collaborators": {
            "short": "Manage client collaborators",
            "path": "ttn-lw-cli clients collaborators",
            "subCommands": {
              "delete": {
                "short": "Delete a client collaborator",
                "path": "ttn-lw-cli clients collaborators delete"
              },
              "get": {
                "short": "Get an client collaborator",
                "path": "ttn-lw-cli clients collaborators get"
              },
              "list": {
                "short": "List client collaborators",
                "path": "ttn-lw-cli clients collaborators list"
              },
              "set": {
                "short": "Set a client collaborator",
                "path": "ttn-lw-cli clients collaborators set"
              }
            }
          },
          "contact-info": {
            "short": "Manage client contact info",
            "path": "ttn-lw-cli clients contact-info",
            "subCommands": {
              "create": {
                "path": "ttn-lw-cli clients contact-info create"
              },
              "delete": {
                "path": "ttn-lw-cli clients contact-info delete"
              },
              "list": {
                "path": "ttn-lw-cli clients contact-info list"
              },
              "request-validation": {
                "short": "Request validation for entity contact info",
                "path": "ttn-lw-cli clients contact-info request-validation"
              },
              "validate": {
                "short": "Validate contact info",
                "path": "ttn-lw-cli clients contact-info validate"
              }
            }
          },
          "create": {
            "short": "Create a client",
            "path": "ttn-lw-cli clients create"
          },
          "delete": {
            "short": "Delete a client",
            "path": "ttn-lw-cli clients delete"
          },
          "get": {
            "short": "Get a client",
            "path": "ttn-lw-cli clients get"
          },
          "list": {
            "short": "List clients",
            "path": "ttn-lw-cli clients list"
          },
          "purge": {
            "short": "Purge an client",
            "path": "ttn-lw-cli clients purge"
          },
          "restore": {
            "short": "Restore a client",
            "path": "ttn-lw-cli clients restore"
          },
          "rights": {
            "short": "List the rights to a client",
            "path": "ttn-lw-cli clients rights"
          },
          "search": {
            "short": "Search for clients",
            "path": "ttn-lw-cli clients search"
          },
          "set": {
            "short": "Set properties of a client",
            "path": "ttn-lw-cli clients set"
          }
        }
      },
      "completion": {
        "short": "generate the autocompletion script for the specified shell",
        "path": "ttn-lw-cli completion",
        "subCommands": {
          "bash": {
            "short": "generate the autocompletion script for bash",
            "path": "ttn-lw-cli completion bash"
          },
          "fish": {
            "short": "generate the autocompletion script for fish",
            "path": "ttn-lw-cli completion fish"
          },
          "powershell": {
            "short": "generate the autocompletion script for powershell",
            "path": "ttn-lw-cli completion powershell"
          },
          "zsh": {
            "short": "generate the autocompletion script for zsh",
            "path": "ttn-lw-cli completion zsh"
          }
        }
      },
      "config": {
        "short": "View the current configuration",
        "path": "ttn-lw-cli config"
      },
      "end-devices": {
        "short": "End Device commands",
        "path": "ttn-lw-cli end-devices",
        "subCommands": {
          "claim": {
            "short": "Claim an end device (EXPERIMENTAL)",
            "path": "ttn-lw-cli end-devices claim"
          },
          "create": {
            "short": "Create an end device",
            "path": "ttn-lw-cli end-devices create"
          },
          "delete": {
            "short": "Delete an end device",
            "path": "ttn-lw-cli end-devices delete"
          },
          "downlink": {
            "short": "Application downlink commands",
            "path": "ttn-lw-cli end-devices downlink",
            "subCommands": {
              "clear": {
                "short": "Clear the application downlink queue",
                "path": "ttn-lw-cli end-devices downlink clear"
              },
              "list": {
                "short": "List the application downlink queue",
                "path": "ttn-lw-cli end-devices downlink list"
              },
              "push": {
                "short": "Push to the application downlink queue",
                "path": "ttn-lw-cli end-devices downlink push"
              },
              "replace": {
                "short": "Replace the application downlink queue",
                "path": "ttn-lw-cli end-devices downlink replace"
              }
            }
          },
          "generate-qr": {
            "short": "Generate an end device QR code (EXPERIMENTAL)",
            "path": "ttn-lw-cli end-devices generate-qr"
          },
          "get": {
            "short": "Get an end device",
            "path": "ttn-lw-cli end-devices get"
          },
          "get-default-mac-settings": {
            "short": "Get Network Server default MAC settings for frequency plan and LoRaWAN version",
            "path": "ttn-lw-cli end-devices get-default-mac-settings"
          },
          "list": {
            "short": "List end devices",
            "path": "ttn-lw-cli end-devices list"
          },
          "list-frequency-plans": {
            "short": "List available frequency plans for end devices",
            "path": "ttn-lw-cli end-devices list-frequency-plans"
          },
          "list-qr-formats": {
            "short": "List QR code formats (EXPERIMENTAL)",
            "path": "ttn-lw-cli end-devices list-qr-formats"
          },
          "provision": {
            "short": "Provision end devices using vendor-specific data",
            "path": "ttn-lw-cli end-devices provision"
          },
          "reset": {
            "short": "Reset state of an end device to factory defaults",
            "path": "ttn-lw-cli end-devices reset"
          },
          "search": {
            "short": "Search for end devices",
            "path": "ttn-lw-cli end-devices search"
          },
          "set": {
            "short": "Set properties of an end device",
            "path": "ttn-lw-cli end-devices set"
          },
          "storage": {
            "short": "Storage Integration",
            "path": "ttn-lw-cli end-devices storage",
            "subCommands": {
              "count": {
                "short": "Count stored upstream messages",
                "path": "ttn-lw-cli end-devices storage count"
              },
              "get": {
                "short": "Retrieve stored upstream messages",
                "path": "ttn-lw-cli end-devices storage get"
              }
            }
          },
          "templates": {
            "short": "End Device template commands",
            "path": "ttn-lw-cli templates",
            "subCommands": {
              "assign-euis": {
                "short": "Assign JoinEUI and DevEUIs to end device templates (EXPERIMENTAL)",
                "path": "ttn-lw-cli templates assign-euis"
              },
              "create": {
                "short": "Create an end device template from an existing device (EXPERIMENTAL)",
                "path": "ttn-lw-cli templates create"
              },
              "execute": {
                "short": "Execute the template to an end device (EXPERIMENTAL)",
                "path": "ttn-lw-cli templates execute"
              },
              "extend": {
                "short": "Extend an end device template (EXPERIMENTAL)",
                "path": "ttn-lw-cli templates extend"
              },
              "from-data": {
                "short": "Convert data to an end device template (EXPERIMENTAL)",
                "path": "ttn-lw-cli templates from-data"
              },
              "list-formats": {
                "short": "List available end device template formats (EXPERIMENTAL)",
                "path": "ttn-lw-cli templates list-formats"
              },
              "map": {
                "short": "Map end device templates (EXPERIMENTAL)",
                "path": "ttn-lw-cli templates map"
              }
            }
          },
          "use-external-join-server": {
            "short": "Disassociate and delete the device from Join Server",
            "path": "ttn-lw-cli end-devices use-external-join-server"
          }
        }
      },
      "events": {
        "short": "Subscribe to events",
        "path": "ttn-lw-cli events",
        "subCommands": {
          "find-related": {
            "short": "Find related events by correlation ID",
            "path": "ttn-lw-cli events find-related"
          }
        }
      },
      "external-users": {
        "short": "External User commands",
        "path": "ttn-lw-cli external-users",
        "subCommands": {
          "create": {
            "short": "Create an external user",
            "path": "ttn-lw-cli external-users create"
          },
          "delete": {
            "short": "Delete an external user",
            "path": "ttn-lw-cli external-users delete"
          },
          "get-by-external-id": {
            "short": "Get an external user by external ID",
            "path": "ttn-lw-cli external-users get-by-external-id"
          },
          "get-by-user-id": {
            "short": "Get an external user by user ID",
            "path": "ttn-lw-cli external-users get-by-user-id"
          }
        }
      },
      "gateways": {
        "short": "Gateway commands",
        "path": "ttn-lw-cli gateways",
        "subCommands": {
          "api-keys": {
            "short": "Manage gateway API keys",
            "path": "ttn-lw-cli gateways api-keys",
            "subCommands": {
              "create": {
                "short": "Create a gateway API key",
                "path": "ttn-lw-cli gateways api-keys create"
              },
              "delete": {
                "short": "Delete a gateway API key",
                "path": "ttn-lw-cli gateways api-keys delete"
              },
              "get": {
                "short": "Get an gateway API key",
                "path": "ttn-lw-cli gateways api-keys get"
              },
              "list": {
                "short": "List gateway API keys",
                "path": "ttn-lw-cli gateways api-keys list"
              },
              "set": {
                "short": "Set properties of a gateway API key",
                "path": "ttn-lw-cli gateways api-keys set"
              }
            }
          },
          "claim": {
            "short": "Claim a gateway (EXPERIMENTAL)",
            "path": "ttn-lw-cli gateways claim",
            "subCommands": {
              "authorize": {
                "short": "Authorize an gateway for claiming (EXPERIMENTAL)",
                "path": "ttn-lw-cli gateways claim authorize"
              },
              "unauthorize": {
                "short": "Unauthorize an gateway for claiming (EXPERIMENTAL)",
                "path": "ttn-lw-cli gateways claim unauthorize"
              }
            }
          },
          "collaborators": {
            "short": "Manage gateway collaborators",
            "path": "ttn-lw-cli gateways collaborators",
            "subCommands": {
              "delete": {
                "short": "Delete a gateway collaborator",
                "path": "ttn-lw-cli gateways collaborators delete"
              },
              "get": {
                "short": "Get an gateway collaborator",
                "path": "ttn-lw-cli gateways collaborators get"
              },
              "list": {
                "short": "List gateway collaborators",
                "path": "ttn-lw-cli gateways collaborators list"
              },
              "set": {
                "short": "Set a gateway collaborator",
                "path": "ttn-lw-cli gateways collaborators set"
              }
            }
          },
          "contact-info": {
            "short": "Manage gateway contact info",
            "path": "ttn-lw-cli gateways contact-info",
            "subCommands": {
              "create": {
                "path": "ttn-lw-cli gateways contact-info create"
              },
              "delete": {
                "path": "ttn-lw-cli gateways contact-info delete"
              },
              "list": {
                "path": "ttn-lw-cli gateways contact-info list"
              },
              "request-validation": {
                "short": "Request validation for entity contact info",
                "path": "ttn-lw-cli gateways contact-info request-validation"
              },
              "validate": {
                "short": "Validate contact info",
                "path": "ttn-lw-cli gateways contact-info validate"
              }
            }
          },
          "create": {
            "short": "Create a gateway",
            "path": "ttn-lw-cli gateways create"
          },
          "delete": {
            "short": "Delete a gateway",
            "path": "ttn-lw-cli gateways delete"
          },
          "get": {
            "short": "Get a gateway",
            "path": "ttn-lw-cli gateways get"
          },
          "get-connection-stats": {
            "short": "Get connection stats for a gateway",
            "path": "ttn-lw-cli gateways get-connection-stats"
          },
          "list": {
            "short": "List gateways",
            "path": "ttn-lw-cli gateways list"
          },
          "list-frequency-plans": {
            "short": "List available frequency plans for gateways",
            "path": "ttn-lw-cli gateways list-frequency-plans"
          },
          "purge": {
            "short": "Purge a gateway",
            "path": "ttn-lw-cli gateways purge"
          },
          "restore": {
            "short": "Restore a gateway",
            "path": "ttn-lw-cli gateways restore"
          },
          "rights": {
            "short": "List the rights to a gateway",
            "path": "ttn-lw-cli gateways rights"
          },
          "search": {
            "short": "Search for gateways",
            "path": "ttn-lw-cli gateways search"
          },
          "set": {
            "short": "Set properties of a gateway",
            "path": "ttn-lw-cli gateways set"
          }
        }
      },
      "login": {
        "short": "Login",
        "path": "ttn-lw-cli login"
      },
      "logout": {
        "short": "Logout",
        "path": "ttn-lw-cli logout"
      },
      "lorawan": {
        "short": "LoRaWAN commands",
        "path": "ttn-lw-cli lorawan",
        "subCommands": {
          "decode": {
            "short": "Decode LoRaWAN frames",
            "path": "ttn-lw-cli lorawan decode"
          }
        }
      },
      "organizations": {
        "short": "Organization commands",
        "path": "ttn-lw-cli organizations",
        "subCommands": {
          "api-keys": {
            "short": "Manage organization API keys",
            "path": "ttn-lw-cli organizations api-keys",
            "subCommands": {
              "create": {
                "short": "Create an organization API key",
                "path": "ttn-lw-cli organizations api-keys create"
              },
              "delete": {
                "short": "Delete an organization API key",
                "path": "ttn-lw-cli organizations api-keys delete"
              },
              "get": {
                "short": "Get an organization API key",
                "path": "ttn-lw-cli organizations api-keys get"
              },
              "list": {
                "short": "List organization API keys",
                "path": "ttn-lw-cli organizations api-keys list"
              },
              "set": {
                "short": "Set properties of an organization API key",
                "path": "ttn-lw-cli organizations api-keys set"
              }
            }
          },
          "collaborators": {
            "short": "Manage organization collaborators",
            "path": "ttn-lw-cli organizations collaborators",
            "subCommands": {
              "delete": {
                "short": "Delete an organization collaborator",
                "path": "ttn-lw-cli organizations collaborators delete"
              },
              "get": {
                "short": "Get an organization collaborator",
                "path": "ttn-lw-cli organizations collaborators get"
              },
              "list": {
                "short": "List organization collaborators",
                "path": "ttn-lw-cli organizations collaborators list"
              },
              "set": {
                "short": "Set an organization collaborator",
                "path": "ttn-lw-cli organizations collaborators set"
              }
            }
          },
          "contact-info": {
            "short": "Manage organization contact info",
            "path": "ttn-lw-cli organizations contact-info",
            "subCommands": {
              "create": {
                "path": "ttn-lw-cli organizations contact-info create"
              },
              "delete": {
                "path": "ttn-lw-cli organizations contact-info delete"
              },
              "list": {
                "path": "ttn-lw-cli organizations contact-info list"
              },
              "request-validation": {
                "short": "Request validation for entity contact info",
                "path": "ttn-lw-cli organizations contact-info request-validation"
              },
              "validate": {
                "short": "Validate contact info",
                "path": "ttn-lw-cli organizations contact-info validate"
              }
            }
          },
          "create": {
            "short": "Create an organization",
            "path": "ttn-lw-cli organizations create"
          },
          "delete": {
            "short": "Delete an organization",
            "path": "ttn-lw-cli organizations delete"
          },
          "get": {
            "short": "Get an organization",
            "path": "ttn-lw-cli organizations get"
          },
          "list": {
            "short": "List organizations",
            "path": "ttn-lw-cli organizations list"
          },
          "purge": {
            "short": "Purge an organization",
            "path": "ttn-lw-cli organizations purge"
          },
          "restore": {
            "short": "Restore an organization",
            "path": "ttn-lw-cli organizations restore"
          },
          "rights": {
            "short": "List the rights to an organization",
            "path": "ttn-lw-cli organizations rights"
          },
          "search": {
            "short": "Search for organizations",
            "path": "ttn-lw-cli organizations search"
          },
          "set": {
            "short": "Set properties of an organization",
            "path": "ttn-lw-cli organizations set"
          }
        }
      },
      "packetbroker": {
        "short": "Packet Broker commands",
        "path": "ttn-lw-cli packetbroker",
        "subCommands": {
          "deregister": {
            "short": "Deregister from Packet Broker",
            "path": "ttn-lw-cli packetbroker deregister"
          },
          "forwarders": {
            "short": "Forwarder commands",
            "path": "ttn-lw-cli packetbroker forwarders",
            "subCommands": {
              "policies": {
                "short": "Manage Forwarder routing policies",
                "path": "ttn-lw-cli packetbroker forwarders policies",
                "subCommands": {
                  "list": {
                    "short": "List routing policies configured by Forwarders",
                    "path": "ttn-lw-cli packetbroker forwarders policies list"
                  }
                }
              }
            }
          },
          "home-networks": {
            "short": "Home Network commands",
            "path": "ttn-lw-cli packetbroker home-networks",
            "subCommands": {
              "gateway-visibilities": {
                "short": "Manage Home Network gateway visibilities",
                "path": "ttn-lw-cli packetbroker home-networks gateway-visibilities",
                "subCommands": {
                  "delete": {
                    "short": "Delete a Home Network gateway visibility",
                    "path": "ttn-lw-cli packetbroker home-networks gateway-visibilities delete"
                  },
                  "get": {
                    "short": "Get a Home Network gateway visibility",
                    "path": "ttn-lw-cli packetbroker home-networks gateway-visibilities get"
                  },
                  "set": {
                    "short": "Set a Home Network gateway visibility",
                    "path": "ttn-lw-cli packetbroker home-networks gateway-visibilities set"
                  }
                }
              },
              "list": {
                "short": "List Home Networks",
                "path": "ttn-lw-cli packetbroker home-networks list"
              },
              "policies": {
                "short": "Manage Home Network routing policies",
                "path": "ttn-lw-cli packetbroker home-networks policies",
                "subCommands": {
                  "delete": {
                    "short": "Delete a Home Network routing policy",
                    "path": "ttn-lw-cli packetbroker home-networks policies delete"
                  },
                  "get": {
                    "short": "Get a Home Network routing policy",
                    "path": "ttn-lw-cli packetbroker home-networks policies get"
                  },
                  "list": {
                    "short": "List Home Network routing policies",
                    "path": "ttn-lw-cli packetbroker home-networks policies list"
                  },
                  "set": {
                    "short": "Set a Home Network routing policy",
                    "path": "ttn-lw-cli packetbroker home-networks policies set"
                  }
                }
              }
            }
          },
          "info": {
            "short": "Show Packet Broker info",
            "path": "ttn-lw-cli packetbroker info"
          },
          "networks": {
            "short": "Network commands",
            "path": "ttn-lw-cli packetbroker networks",
            "subCommands": {
              "list": {
                "short": "List networks",
                "path": "ttn-lw-cli packetbroker networks list"
              }
            }
          },
          "register": {
            "short": "Register with Packet Broker",
            "path": "ttn-lw-cli packetbroker register"
          }
        }
      },
      "simulate": {
        "short": "Simulation commands",
        "path": "ttn-lw-cli simulate",
        "subCommands": {
          "application-uplink": {
            "short": "Simulate an application-layer uplink message from an end device, sent directly to the Application Server",
            "path": "ttn-lw-cli simulate application-uplink"
          }
        }
      },
      "templates": {
        "short": "End Device template commands",
        "path": "ttn-lw-cli templates",
        "subCommands": {
          "assign-euis": {
            "short": "Assign JoinEUI and DevEUIs to end device templates (EXPERIMENTAL)",
            "path": "ttn-lw-cli templates assign-euis"
          },
          "create": {
            "short": "Create an end device template from an existing device (EXPERIMENTAL)",
            "path": "ttn-lw-cli templates create"
          },
          "execute": {
            "short": "Execute the template to an end device (EXPERIMENTAL)",
            "path": "ttn-lw-cli templates execute"
          },
          "extend": {
            "short": "Extend an end device template (EXPERIMENTAL)",
            "path": "ttn-lw-cli templates extend"
          },
          "from-data": {
            "short": "Convert data to an end device template (EXPERIMENTAL)",
            "path": "ttn-lw-cli templates from-data"
          },
          "list-formats": {
            "short": "List available end device template formats (EXPERIMENTAL)",
            "path": "ttn-lw-cli templates list-formats"
          },
          "map": {
            "short": "Map end device templates (EXPERIMENTAL)",
            "path": "ttn-lw-cli templates map"
          }
        }
      },
      "tenants": {
        "short": "Tenant commands",
        "path": "ttn-lw-cli tenants",
        "subCommands": {
          "create": {
            "short": "Create a tenant",
            "path": "ttn-lw-cli tenants create"
          },
          "delete": {
            "short": "Delete a tenant",
            "path": "ttn-lw-cli tenants delete"
          },
          "get": {
            "short": "Get a tenant",
            "path": "ttn-lw-cli tenants get"
          },
          "get-identifiers-for-end-device-euis": {
            "short": "Get tenant identifiers for Device EUIs",
            "path": "ttn-lw-cli tenants get-identifiers-for-end-device-euis"
          },
          "get-identifiers-for-gateway-eui": {
            "short": "Get tenant identifiers for a Gateway EUI",
            "path": "ttn-lw-cli tenants get-identifiers-for-gateway-eui"
          },
          "get-registry-totals": {
            "short": "Get registry totals of a tenant",
            "path": "ttn-lw-cli tenants get-registry-totals"
          },
          "list": {
            "short": "List tenants",
            "path": "ttn-lw-cli tenants list"
          },
          "search": {
            "short": "Search for tenants",
            "path": "ttn-lw-cli tenants search"
          },
          "update": {
            "short": "Update a tenant",
            "path": "ttn-lw-cli tenants update"
          }
        }
      },
      "use": {
        "short": "Generate client configuration for The Things Stack",
        "path": "ttn-lw-cli use"
      },
      "users": {
        "short": "User commands",
        "path": "ttn-lw-cli users",
        "subCommands": {
          "api-keys": {
            "short": "Manage user API keys",
            "path": "ttn-lw-cli users api-keys",
            "subCommands": {
              "create": {
                "short": "Create a user API key",
                "path": "ttn-lw-cli users api-keys create"
              },
              "delete": {
                "short": "Delete a user API key",
                "path": "ttn-lw-cli users api-keys delete"
              },
              "get": {
                "short": "Get an user API key",
                "path": "ttn-lw-cli users api-keys get"
              },
              "list": {
                "short": "List user API keys",
                "path": "ttn-lw-cli users api-keys list"
              },
              "set": {
                "short": "Set properties of a user API key",
                "path": "ttn-lw-cli users api-keys set"
              }
            }
          },
          "contact-info": {
            "short": "Manage user contact info",
            "path": "ttn-lw-cli users contact-info",
            "subCommands": {
              "create": {
                "path": "ttn-lw-cli users contact-info create"
              },
              "delete": {
                "path": "ttn-lw-cli users contact-info delete"
              },
              "list": {
                "path": "ttn-lw-cli users contact-info list"
              },
              "request-validation": {
                "short": "Request validation for entity contact info",
                "path": "ttn-lw-cli users contact-info request-validation"
              },
              "validate": {
                "short": "Validate contact info",
                "path": "ttn-lw-cli users contact-info validate"
              }
            }
          },
          "create": {
            "short": "Create a user",
            "path": "ttn-lw-cli users create"
          },
          "create-login-token": {
            "short": "Create a user login token",
            "path": "ttn-lw-cli users create-login-token"
          },
          "delete": {
            "short": "Delete a user",
            "path": "ttn-lw-cli users delete"
          },
          "forgot-password": {
            "short": "Request a temporary user password",
            "path": "ttn-lw-cli users forgot-password"
          },
          "get": {
            "short": "Get a user",
            "path": "ttn-lw-cli users get"
          },
          "invitations": {
            "short": "Manage user invitations",
            "path": "ttn-lw-cli users invitations",
            "subCommands": {
              "create": {
                "short": "Create a user invitation",
                "path": "ttn-lw-cli users invitations create"
              },
              "delete": {
                "short": "Delete a user invitation",
                "path": "ttn-lw-cli users invitations delete"
              },
              "list": {
                "short": "List user invitations",
                "path": "ttn-lw-cli users invitations list"
              }
            }
          },
          "list": {
            "short": "List users",
            "path": "ttn-lw-cli users list"
          },
          "oauth": {
            "short": "Manage OAuth authorizations and access tokens",
            "path": "ttn-lw-cli users oauth",
            "subCommands": {
              "access-tokens": {
                "short": "Manage OAuth tokens",
                "path": "ttn-lw-cli users oauth access-tokens",
                "subCommands": {
                  "delete": {
                    "short": "Delete an OAuth access token",
                    "path": "ttn-lw-cli users oauth access-tokens delete"
                  },
                  "list": {
                    "short": "List OAuth access tokens",
                    "path": "ttn-lw-cli users oauth access-tokens list"
                  }
                }
              },
              "authorizations": {
                "short": "Manage OAuth authorizations",
                "path": "ttn-lw-cli users oauth authorizations",
                "subCommands": {
                  "delete": {
                    "short": "Delete an OAuth authorization and all access tokens",
                    "path": "ttn-lw-cli users oauth authorizations delete"
                  },
                  "list": {
                    "short": "List OAuth authorizations",
                    "path": "ttn-lw-cli users oauth authorizations list"
                  }
                }
              }
            }
          },
          "purge": {
            "short": "Purge a user",
            "path": "ttn-lw-cli users purge"
          },
          "restore": {
            "short": "Restore a user",
            "path": "ttn-lw-cli users restore"
          },
          "rights": {
            "short": "List the rights to a user",
            "path": "ttn-lw-cli users rights"
          },
          "search": {
            "short": "Search for users",
            "path": "ttn-lw-cli users search"
          },
          "sessions": {
            "short": "Manage user sessions",
            "path": "ttn-lw-cli users sessions",
            "subCommands": {
              "delete": {
                "short": "Delete a user session",
                "path": "ttn-lw-cli users sessions delete"
              },
              "list": {
                "short": "List user sessions",
                "path": "ttn-lw-cli users sessions list"
              }
            }
          },
          "set": {
            "short": "Set properties of a user",
            "path": "ttn-lw-cli users set"
          },
          "update-password": {
            "short": "Update a user password",
            "path": "ttn-lw-cli users update-password"
          }
        }
      },
      "version": {
        "short": "Print version information",
        "path": "ttn-lw-cli version"
      }
    }
  }
}
