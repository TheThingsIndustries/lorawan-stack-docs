{
  "swagger": "2.0",
  "info": {
    "title": "tti/lorawan/v3/authentication_provider.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AuthenticationProviderRegistry"
    },
    {
      "name": "ExternalUserRegistry"
    },
    {
      "name": "Noc"
    },
    {
      "name": "EntityRegistrySearch"
    },
    {
      "name": "TenantRegistry"
    },
    {
      "name": "Tbs"
    }
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/authentication_providers": {
      "get": {
        "operationId": "AuthenticationProviderRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3AuthenticationProviders"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": ["AuthenticationProviderRegistry"]
      },
      "post": {
        "operationId": "AuthenticationProviderRegistry_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3AuthenticationProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3CreateAuthenticationProviderRequest"
            }
          }
        ],
        "tags": ["AuthenticationProviderRegistry"]
      }
    },
    "/authentication_providers/{external_user.provider_ids.provider_id}/external_users": {
      "post": {
        "operationId": "ExternalUserRegistry_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ExternalUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "external_user.provider_ids.provider_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "external_user": {
                  "type": "object",
                  "properties": {
                    "user_ids": {
                      "$ref": "#/definitions/v3UserIdentifiers"
                    },
                    "provider_ids": {
                      "type": "object"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "external_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["ExternalUserRegistry"]
      }
    },
    "/authentication_providers/{ids.provider_id}": {
      "get": {
        "operationId": "AuthenticationProviderRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3AuthenticationProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids.provider_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["AuthenticationProviderRegistry"]
      }
    },
    "/authentication_providers/{provider.ids.provider_id}": {
      "put": {
        "operationId": "AuthenticationProviderRegistry_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3AuthenticationProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "provider.ids.provider_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "provider": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "object"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "name": {
                      "type": "string"
                    },
                    "allow_registrations": {
                      "type": "boolean"
                    },
                    "configuration": {
                      "$ref": "#/definitions/v3AuthenticationProviderConfiguration"
                    },
                    "allowed_email_domains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Allowed email domains for this provider.\nIf this field is set, only emails with the specified domains will be allowed to login.\nThe server also skips checking the `email_verified` field of the claims token.\nWe highly recommend admins of such providers to not allow\nusers to change their email addresses with the provider due to lack of verification."
                    }
                  }
                },
                "field_mask": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["AuthenticationProviderRegistry"]
      }
    },
    "/authentication_providers/{provider_ids.provider_id}/external_users/{external_id}": {
      "get": {
        "operationId": "ExternalUserRegistry_GetByExternalID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ExternalUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "provider_ids.provider_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "external_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["ExternalUserRegistry"]
      },
      "delete": {
        "operationId": "ExternalUserRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "provider_ids.provider_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "external_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["ExternalUserRegistry"]
      }
    },
    "/authentication_providers/{provider_ids.provider_id}/users/{user_ids.user_id}": {
      "get": {
        "operationId": "ExternalUserRegistry_GetByUserID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ExternalUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "provider_ids.provider_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["ExternalUserRegistry"]
      }
    },
    "/authentication_providers/{provider_id}": {
      "delete": {
        "operationId": "AuthenticationProviderRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["AuthenticationProviderRegistry"]
      }
    },
    "/noc/application/{application_ids.application_id}/channels/lora-performance": {
      "post": {
        "operationId": "Noc_QueryApplicationChannelsLoRaPerformance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ChannelsLoRaPerformance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "application_ids": {
                  "type": "object"
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for end device data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/application/{application_ids.application_id}/channels/packet-count": {
      "post": {
        "operationId": "Noc_QueryApplicationChannelsPacketCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ChannelsPacketCount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "application_ids": {
                  "type": "object"
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for end device data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/application/{application_ids.application_id}/channels/utilization": {
      "post": {
        "operationId": "Noc_QueryApplicationChannelsUtilization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ChannelsUtilization"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "application_ids": {
                  "type": "object"
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for end device data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/application/{application_ids.application_id}/data_rates/packet-count": {
      "post": {
        "operationId": "Noc_QueryApplicationDataRatesPacketCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3DataRatesPacketCount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "application_ids": {
                  "type": "object"
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for end device data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/application/{application_ids.application_id}/end_devices/active-metrics": {
      "post": {
        "operationId": "Noc_QueryApplicationEndDevicesActiveMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevicesActiveMetrics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "application_ids": {
                  "type": "object"
                },
                "time_window": {
                  "$ref": "#/definitions/v3TimeWindowQuery"
                }
              },
              "description": "Request for application data in a specific time window."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/application/{application_ids.application_id}/gateways": {
      "post": {
        "operationId": "Noc_QueryApplicationGatewaysSeen",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationGatewaysSeen"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "application_ids": {
                  "type": "object"
                },
                "time_window": {
                  "$ref": "#/definitions/v3TimeWindowQuery"
                }
              },
              "description": "Request for application data in a specific time window."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/application/{application_ids.application_id}/statistics": {
      "post": {
        "operationId": "Noc_QueryApplicationStatistics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationEndDeviceStatistics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "application_ids": {
                  "type": "object"
                },
                "time_window": {
                  "$ref": "#/definitions/v3TimeWindowQuery"
                }
              },
              "description": "Request for application data in a specific time window."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/applications/active": {
      "post": {
        "operationId": "Noc_QueryApplicationsActive",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ConnectedTimeBuckets"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request for data using aggregates by time buckets with a specified interval.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3TimeBucketQuery"
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/applications/active-metrics": {
      "post": {
        "operationId": "Noc_QueryApplicationsActiveMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationsActiveMetrics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request for data in a specific time window.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3TimeWindowQuery"
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/applications/statistics": {
      "post": {
        "operationId": "Noc_QueryApplicationsStatistics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationsStatistics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request for data in a specific time window.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3TimeWindowQuery"
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/configuration": {
      "get": {
        "summary": "Get the configuration of the Network Operations Center. The response is typically used\nto enable or disable features in a user interface.",
        "operationId": "Noc_GetConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetNocConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": ["Noc"]
      }
    },
    "/noc/end_device/{end_device_ids.application_ids.application_id}/{end_device_ids.device_id}/channels/lora-performance": {
      "post": {
        "operationId": "Noc_QueryEndDeviceChannelsLoRaPerformance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ChannelsLoRaPerformance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "end_device_ids": {
                  "type": "object",
                  "properties": {
                    "application_ids": {
                      "type": "object"
                    },
                    "dev_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN DevEUI."
                    },
                    "join_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                    },
                    "dev_addr": {
                      "type": "string",
                      "format": "string",
                      "example": "2600ABCD",
                      "description": "The LoRaWAN DevAddr."
                    }
                  }
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for end device data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/end_device/{end_device_ids.application_ids.application_id}/{end_device_ids.device_id}/channels/packet-count": {
      "post": {
        "operationId": "Noc_QueryEndDeviceChannelsPacketCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ChannelsPacketCount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "end_device_ids": {
                  "type": "object",
                  "properties": {
                    "application_ids": {
                      "type": "object"
                    },
                    "dev_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN DevEUI."
                    },
                    "join_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                    },
                    "dev_addr": {
                      "type": "string",
                      "format": "string",
                      "example": "2600ABCD",
                      "description": "The LoRaWAN DevAddr."
                    }
                  }
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for end device data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/end_device/{end_device_ids.application_ids.application_id}/{end_device_ids.device_id}/channels/utilization": {
      "post": {
        "operationId": "Noc_QueryEndDeviceChannelsUtilization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ChannelsUtilization"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "end_device_ids": {
                  "type": "object",
                  "properties": {
                    "application_ids": {
                      "type": "object"
                    },
                    "dev_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN DevEUI."
                    },
                    "join_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                    },
                    "dev_addr": {
                      "type": "string",
                      "format": "string",
                      "example": "2600ABCD",
                      "description": "The LoRaWAN DevAddr."
                    }
                  }
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for end device data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/end_device/{end_device_ids.application_ids.application_id}/{end_device_ids.device_id}/data_rates/packet-count": {
      "post": {
        "operationId": "Noc_QueryEndDeviceDataRatesPacketCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3DataRatesPacketCount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "end_device_ids": {
                  "type": "object",
                  "properties": {
                    "application_ids": {
                      "type": "object"
                    },
                    "dev_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN DevEUI."
                    },
                    "join_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                    },
                    "dev_addr": {
                      "type": "string",
                      "format": "string",
                      "example": "2600ABCD",
                      "description": "The LoRaWAN DevAddr."
                    }
                  }
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for end device data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/end_device/{end_device_ids.application_ids.application_id}/{end_device_ids.device_id}/last-seen": {
      "post": {
        "operationId": "Noc_QueryEndDeviceLastSeen",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "end_device_ids": {
                  "type": "object",
                  "properties": {
                    "application_ids": {
                      "type": "object"
                    },
                    "dev_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN DevEUI."
                    },
                    "join_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                    },
                    "dev_addr": {
                      "type": "string",
                      "format": "string",
                      "example": "2600ABCD",
                      "description": "The LoRaWAN DevAddr."
                    }
                  }
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for end device data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/end_device/{end_device_ids.application_ids.application_id}/{end_device_ids.device_id}/packet-error-rate": {
      "post": {
        "operationId": "Noc_QueryEndDevicePacketErrorRate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3PacketErrorRatesTimeBuckets"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "end_device_ids": {
                  "type": "object",
                  "properties": {
                    "application_ids": {
                      "type": "object"
                    },
                    "dev_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN DevEUI."
                    },
                    "join_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                    },
                    "dev_addr": {
                      "type": "string",
                      "format": "string",
                      "example": "2600ABCD",
                      "description": "The LoRaWAN DevAddr."
                    }
                  }
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for end device data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/end_device/{end_device_ids.application_ids.application_id}/{end_device_ids.device_id}/session-start": {
      "post": {
        "operationId": "Noc_QueryEndDeviceSessionStart",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "end_device_ids": {
                  "type": "object",
                  "properties": {
                    "application_ids": {
                      "type": "object"
                    },
                    "dev_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN DevEUI."
                    },
                    "join_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                    },
                    "dev_addr": {
                      "type": "string",
                      "format": "string",
                      "example": "2600ABCD",
                      "description": "The LoRaWAN DevAddr."
                    }
                  }
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for end device data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/end_devices/active": {
      "post": {
        "operationId": "Noc_QueryEndDevicesActive",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ConnectedTimeBuckets"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request for data using aggregates by time buckets with a specified interval.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3TimeBucketQuery"
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/end_devices/active-metrics": {
      "post": {
        "operationId": "Noc_QueryEndDevicesActiveMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevicesActiveMetrics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request for data in a specific time window.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3TimeWindowQuery"
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/end_devices/statistics": {
      "post": {
        "operationId": "Noc_QueryEndDevicesStatistics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevicesStatistics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request for data in a specific time window.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3TimeWindowQuery"
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/gateway/{gateway_ids.gateway_id}/channels/lora-performance": {
      "post": {
        "operationId": "Noc_QueryGatewayChannelsLoRaPerformance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ChannelsLoRaPerformance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "gateway_ids": {
                  "type": "object",
                  "properties": {
                    "eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "Secondary identifier, which can only be used in specific requests."
                    }
                  }
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for gateway data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/gateway/{gateway_ids.gateway_id}/channels/packet-count": {
      "post": {
        "operationId": "Noc_QueryGatewayChannelsPacketCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ChannelsPacketCount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "gateway_ids": {
                  "type": "object",
                  "properties": {
                    "eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "Secondary identifier, which can only be used in specific requests."
                    }
                  }
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for gateway data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/gateway/{gateway_ids.gateway_id}/channels/utilization": {
      "post": {
        "operationId": "Noc_QueryGatewayChannelsUtilization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ChannelsUtilization"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "gateway_ids": {
                  "type": "object",
                  "properties": {
                    "eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "Secondary identifier, which can only be used in specific requests."
                    }
                  }
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for gateway data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/gateway/{gateway_ids.gateway_id}/data_rates/packet-count": {
      "post": {
        "operationId": "Noc_QueryGatewayDataRatesPacketCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3DataRatesPacketCount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "gateway_ids": {
                  "type": "object",
                  "properties": {
                    "eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "Secondary identifier, which can only be used in specific requests."
                    }
                  }
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for gateway data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/gateway/{gateway_ids.gateway_id}/traffic": {
      "post": {
        "operationId": "Noc_QueryGatewayTrafficRates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3TrafficRatesTimeBuckets"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "gateway_ids": {
                  "type": "object",
                  "properties": {
                    "eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "Secondary identifier, which can only be used in specific requests."
                    }
                  }
                },
                "time_bucket": {
                  "$ref": "#/definitions/v3TimeBucketQuery"
                }
              },
              "description": "Request for gateway data using aggregates by time buckets with a specified interval."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/gateway/{gateway_ids.gateway_id}/uptime": {
      "post": {
        "operationId": "Noc_QueryGatewayUptime",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "gateway_ids": {
                  "type": "object",
                  "properties": {
                    "eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "Secondary identifier, which can only be used in specific requests."
                    }
                  }
                },
                "time_window": {
                  "$ref": "#/definitions/v3TimeWindowQuery"
                }
              },
              "description": "Request for gateway data in a specific time window."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/gateway/{gateway_time_window.gateway_ids.gateway_id}/connection-events": {
      "post": {
        "operationId": "Noc_QueryGatewayConnectionEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GatewayConnectionEvents"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_time_window.gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "gateway_time_window": {
                  "type": "object",
                  "properties": {
                    "gateway_ids": {
                      "type": "object",
                      "properties": {
                        "eui": {
                          "type": "string",
                          "format": "string",
                          "example": "70B3D57ED000ABCD",
                          "description": "Secondary identifier, which can only be used in specific requests."
                        }
                      }
                    },
                    "time_window": {
                      "$ref": "#/definitions/v3TimeWindowQuery"
                    }
                  },
                  "description": "Request for gateway data in a specific time window."
                },
                "event_type": {
                  "$ref": "#/definitions/v3GatewayConnectionEventTypeValue",
                  "description": "The event type to query. If unset, query all event types."
                }
              },
              "description": "Request for gateway connection events in a specific time window."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/gateway/{gateway_time_window.gateway_ids.gateway_id}/networks-seen/top/{top}": {
      "post": {
        "operationId": "Noc_QueryGatewayTopNetworksSeen",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GatewayTopNetworksSeen"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_time_window.gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "top",
            "description": "Top number of networks to include.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "gateway_time_window": {
                  "type": "object",
                  "properties": {
                    "gateway_ids": {
                      "type": "object",
                      "properties": {
                        "eui": {
                          "type": "string",
                          "format": "string",
                          "example": "70B3D57ED000ABCD",
                          "description": "Secondary identifier, which can only be used in specific requests."
                        }
                      }
                    },
                    "time_window": {
                      "$ref": "#/definitions/v3TimeWindowQuery"
                    }
                  },
                  "description": "Request for gateway data in a specific time window."
                }
              },
              "description": "Request for top network seen by a gateway."
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/gateways/active-metrics": {
      "post": {
        "operationId": "Noc_QueryGatewaysActiveMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GatewaysActiveMetrics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request for data in a specific time window.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3TimeWindowQuery"
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/gateways/connected": {
      "post": {
        "operationId": "Noc_QueryGatewaysConnected",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ConnectedTimeBuckets"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request for data using aggregates by time buckets with a specified interval.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3TimeBucketQuery"
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/gateways/connectivity": {
      "post": {
        "operationId": "Noc_QueryGatewaysConnectivityTimes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GatewaysConnectivityTimes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request for data in a specific time window.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3TimeWindowQuery"
            }
          }
        ],
        "tags": ["Noc"]
      }
    },
    "/noc/health": {
      "get": {
        "operationId": "Noc_CheckHealth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": ["Noc"]
      }
    },
    "/search/tenants": {
      "get": {
        "operationId": "EntityRegistrySearch_SearchTenants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Tenants"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id_contains",
            "description": "Find tenants where the ID contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name_contains",
            "description": "Find tenants where the name contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description_contains",
            "description": "Find tenants where the description contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "description": "Find tenants where the state is any of these states.\n\n - STATE_REQUESTED: Denotes that the entity has been requested and is pending review by an admin.\n - STATE_APPROVED: Denotes that the entity has been reviewed and approved by an admin.\n - STATE_REJECTED: Denotes that the entity has been reviewed and rejected by an admin.\n - STATE_FLAGGED: Denotes that the entity has been flagged and is pending review by an admin.\n - STATE_SUSPENDED: Denotes that the entity has been reviewed and suspended by an admin.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "STATE_REQUESTED",
                "STATE_APPROVED",
                "STATE_REJECTED",
                "STATE_FLAGGED",
                "STATE_SUSPENDED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted tenants.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": ["EntityRegistrySearch"]
      }
    },
    "/tbs/report": {
      "post": {
        "operationId": "Tbs_Report",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": ["Tbs"]
      }
    },
    "/tenants": {
      "get": {
        "operationId": "TenantRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Tenants"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": ["TenantRegistry"]
      },
      "post": {
        "operationId": "TenantRegistry_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Tenant"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3CreateTenantRequest"
            }
          }
        ],
        "tags": ["TenantRegistry"]
      }
    },
    "/tenants/registry-totals": {
      "post": {
        "operationId": "TenantRegistry_BatchGetRegistryTotals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3BatchGetTenantRegistryTotalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3BatchGetTenantRegistryTotalsRequest"
            }
          }
        ],
        "tags": ["TenantRegistry"]
      }
    },
    "/tenants/{tenant.ids.tenant_id}": {
      "put": {
        "operationId": "TenantRegistry_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Tenant"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.ids.tenant_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tenant": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "object"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "contact_info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/definitions/v3ContactInfo"
                      }
                    },
                    "max_applications": {
                      "type": "string",
                      "format": "uint64",
                      "description": "If set, restricts the maximum number of applications that can be created."
                    },
                    "max_clients": {
                      "type": "string",
                      "format": "uint64",
                      "description": "If set, restricts the maximum number of clients that can be created."
                    },
                    "max_end_devices": {
                      "type": "string",
                      "format": "uint64",
                      "description": "If set, restricts the maximum number of end_devices that can be created."
                    },
                    "max_gateways": {
                      "type": "string",
                      "format": "uint64",
                      "description": "If set, restricts the maximum number of gateways that can be created."
                    },
                    "max_organizations": {
                      "type": "string",
                      "format": "uint64",
                      "description": "If set, restricts the maximum number of organizations that can be created."
                    },
                    "max_users": {
                      "type": "string",
                      "format": "uint64",
                      "description": "If set, restricts the maximum number of users that can be created."
                    },
                    "state": {
                      "$ref": "#/definitions/v3State",
                      "description": "The reviewing state of the tenant.\nThis field can only be modified by tenant admins.\nIf state_description is not updated when updating state, state_description is cleared."
                    },
                    "state_description": {
                      "type": "string",
                      "description": "A description for the state field.\nThis field can only be modified by admins, and should typically only be updated\nwhen also updating `state`."
                    },
                    "capabilities": {
                      "type": "object"
                    },
                    "configuration": {
                      "$ref": "#/definitions/lorawanv3Configuration"
                    },
                    "billing": {
                      "$ref": "#/definitions/v3Billing"
                    },
                    "billing_identifiers": {
                      "$ref": "#/definitions/v3BillingIdentifiers"
                    }
                  },
                  "description": "Tenant is the message that defines a Tenant in the network."
                },
                "field_mask": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["TenantRegistry"]
      }
    },
    "/tenants/{tenant_ids.tenant_id}": {
      "get": {
        "operationId": "TenantRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Tenant"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant_ids.tenant_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["TenantRegistry"]
      }
    },
    "/tenants/{tenant_ids.tenant_id}/registry-totals": {
      "get": {
        "operationId": "TenantRegistry_GetRegistryTotals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3TenantRegistryTotals"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant_ids.tenant_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["TenantRegistry"]
      }
    },
    "/tenants/{tenant_id}": {
      "delete": {
        "operationId": "TenantRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["TenantRegistry"]
      }
    }
  },
  "definitions": {
    "AuthenticationProviderOIDC": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "provider_url": {
          "type": "string"
        }
      }
    },
    "BillingAWSSaaSMarketplace": {
      "type": "object",
      "properties": {
        "customer_identifier": {
          "type": "string"
        },
        "product_code": {
          "type": "string"
        }
      }
    },
    "BillingStripe": {
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "string"
        },
        "plan_id": {
          "type": "string"
        },
        "subscription_id": {
          "type": "string"
        },
        "subscription_item_id": {
          "type": "string"
        }
      }
    },
    "ClusterIdentityServer": {
      "type": "object",
      "properties": {
        "user_registration": {
          "$ref": "#/definitions/IdentityServerUserRegistration"
        },
        "profile_picture": {
          "$ref": "#/definitions/IdentityServerProfilePicture"
        },
        "end_device_picture": {
          "$ref": "#/definitions/IdentityServerEndDevicePicture"
        },
        "user_rights": {
          "$ref": "#/definitions/IdentityServerUserRights"
        },
        "admin_rights": {
          "$ref": "#/definitions/IdentityServerAdminRights"
        },
        "user_login": {
          "$ref": "#/definitions/IdentityServerUserLogin"
        },
        "email": {
          "$ref": "#/definitions/IdentityServerEmail"
        },
        "application_limits": {
          "$ref": "#/definitions/IdentityServerApplicationLimits",
          "description": "The default limits set on newly created applications.\nNote that these limits do not override the limits of the tenant or the license."
        },
        "organization_limits": {
          "$ref": "#/definitions/IdentityServerOrganizationLimits",
          "description": "The default limits set on newly created organizations.\nNote that these limits do not override the limits of the tenant or the license."
        },
        "user_limits": {
          "$ref": "#/definitions/IdentityServerUserLimits",
          "description": "The default limits set on newly created users.\nNote that these limits do not override the limits of the tenant or the license."
        }
      }
    },
    "ClusterJoinServer": {
      "type": "object",
      "properties": {
        "join_eui_prefixes": {
          "type": "array",
          "example": ["70B3D57ED0000000/56"],
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "ClusterNetworkOperationsCenter": {
      "type": "object",
      "properties": {
        "access": {
          "$ref": "#/definitions/ClusterNetworkOperationsCenterAccess"
        }
      }
    },
    "ClusterNetworkOperationsCenterAccess": {
      "type": "object",
      "properties": {
        "extended": {
          "type": "boolean"
        }
      }
    },
    "ClusterNetworkServer": {
      "type": "object",
      "properties": {
        "net_id": {
          "type": "string",
          "format": "string",
          "example": "000013"
        },
        "ns_id": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        },
        "dev_addr_prefixes": {
          "type": "array",
          "example": ["2600AB00/24"],
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "deduplication_window": {
          "type": "string"
        },
        "cooldown_window": {
          "type": "string"
        }
      }
    },
    "ConfigurationCluster": {
      "type": "object",
      "properties": {
        "ui": {
          "$ref": "#/definitions/ConfigurationUI"
        },
        "is": {
          "$ref": "#/definitions/ClusterIdentityServer",
          "description": "Identity Server configuration."
        },
        "ns": {
          "$ref": "#/definitions/ClusterNetworkServer"
        },
        "js": {
          "$ref": "#/definitions/ClusterJoinServer",
          "description": "Join Server configuration."
        },
        "noc": {
          "$ref": "#/definitions/ClusterNetworkOperationsCenter",
          "description": "Network Operations Center configuration."
        }
      }
    },
    "ConfigurationPacketBroker": {
      "type": "object",
      "properties": {
        "listed": {
          "type": "boolean",
          "description": "Indicates whether the Home Network is publicly listed."
        }
      }
    },
    "ConfigurationUI": {
      "type": "object",
      "properties": {
        "branding_base_url": {
          "type": "string"
        }
      }
    },
    "EmailNetwork": {
      "type": "object",
      "properties": {
        "branding_base_url": {
          "type": "string"
        }
      }
    },
    "EntityCountingEntityCountingType": {
      "type": "string",
      "enum": ["ALL", "ONLY_ACTIVATED"],
      "default": "ALL"
    },
    "IdentityServerAdminRights": {
      "type": "object",
      "properties": {
        "all": {
          "type": "boolean"
        }
      }
    },
    "IdentityServerApplicationLimits": {
      "type": "object",
      "properties": {
        "end_devices": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "IdentityServerEmail": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/EmailNetwork"
        }
      }
    },
    "IdentityServerEndDevicePicture": {
      "type": "object",
      "properties": {
        "disable_upload": {
          "type": "boolean"
        }
      }
    },
    "IdentityServerOrganizationLimits": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "string",
          "format": "uint64"
        },
        "clients": {
          "type": "string",
          "format": "uint64"
        },
        "gateways": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "IdentityServerProfilePicture": {
      "type": "object",
      "properties": {
        "disable_upload": {
          "type": "boolean"
        },
        "use_gravatar": {
          "type": "boolean"
        }
      }
    },
    "IdentityServerUserLimits": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "string",
          "format": "uint64"
        },
        "clients": {
          "type": "string",
          "format": "uint64"
        },
        "gateways": {
          "type": "string",
          "format": "uint64"
        },
        "organizations": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "IdentityServerUserLogin": {
      "type": "object",
      "properties": {
        "disable_credentials_login": {
          "type": "boolean"
        }
      }
    },
    "IdentityServerUserRegistration": {
      "type": "object",
      "properties": {
        "invitation": {
          "$ref": "#/definitions/IdentityServerUserRegistrationInvitation"
        },
        "contact_info_validation": {
          "$ref": "#/definitions/IdentityServerUserRegistrationContactInfoValidation"
        },
        "admin_approval": {
          "$ref": "#/definitions/UserRegistrationAdminApproval"
        },
        "password_requirements": {
          "$ref": "#/definitions/UserRegistrationPasswordRequirements"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "IdentityServerUserRegistrationContactInfoValidation": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean"
        }
      }
    },
    "IdentityServerUserRegistrationInvitation": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean"
        },
        "token_ttl": {
          "type": "string"
        }
      }
    },
    "IdentityServerUserRights": {
      "type": "object",
      "properties": {
        "create_applications": {
          "type": "boolean"
        },
        "create_clients": {
          "type": "boolean"
        },
        "create_gateways": {
          "type": "boolean"
        },
        "create_organizations": {
          "type": "boolean"
        },
        "update_primary_email_address": {
          "type": "boolean"
        },
        "update_name": {
          "type": "boolean"
        }
      }
    },
    "MeteringDataTenantMeteringData": {
      "type": "object",
      "properties": {
        "tenant_id": {
          "$ref": "#/definitions/v3TenantIdentifiers"
        },
        "totals": {
          "$ref": "#/definitions/v3TenantRegistryTotals"
        }
      }
    },
    "PacketErrorRatesTimeBucketsPacketErrorRate": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "packet_error_rate": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "PictureEmbedded": {
      "type": "object",
      "properties": {
        "mime_type": {
          "type": "string",
          "description": "MIME type of the picture."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Picture data. A data URI can be constructed as follows:\n`data:\u003cmime_type\u003e;base64,\u003cdata\u003e`."
        }
      }
    },
    "TrafficRatesTimeBucketsDirection": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "rate": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "UserRegistrationAdminApproval": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean"
        }
      }
    },
    "UserRegistrationPasswordRequirements": {
      "type": "object",
      "properties": {
        "min_length": {
          "type": "integer",
          "format": "int64"
        },
        "max_length": {
          "type": "integer",
          "format": "int64"
        },
        "min_uppercase": {
          "type": "integer",
          "format": "int64"
        },
        "min_digits": {
          "type": "integer",
          "format": "int64"
        },
        "min_special": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "lorawanv3Configuration": {
      "type": "object",
      "properties": {
        "default_cluster": {
          "$ref": "#/definitions/ConfigurationCluster",
          "description": "Default cluster configuration."
        },
        "clusters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConfigurationCluster"
          },
          "description": "Configuration per cluster (by ID)."
        },
        "pb": {
          "$ref": "#/definitions/ConfigurationPacketBroker",
          "description": "Packet Broker configuration."
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": ["NULL_VALUE"],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v3ApplicationEndDeviceStatistic": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "$ref": "#/definitions/v3EndDeviceIdentifiers"
        },
        "last_seen": {
          "type": "string",
          "format": "date-time"
        },
        "last_packet_error_rate": {
          "type": "number",
          "format": "float"
        },
        "best_gateway_ids": {
          "$ref": "#/definitions/v3GatewayIdentifiers"
        },
        "best_channel_rssi": {
          "type": "number",
          "format": "float"
        },
        "packet_count": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "Application end devices statistic."
    },
    "v3ApplicationEndDeviceStatistics": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationEndDeviceStatistic"
          }
        }
      },
      "description": "Application end devices statistics."
    },
    "v3ApplicationGatewaysSeen": {
      "type": "object",
      "properties": {
        "gateways": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3GatewayStatistics"
          }
        }
      }
    },
    "v3ApplicationIdentifiers": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string"
        }
      }
    },
    "v3ApplicationsActiveMetrics": {
      "type": "object",
      "properties": {
        "application_ids": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationIdentifiers"
          }
        }
      },
      "description": "Identifiers of active applications."
    },
    "v3ApplicationsStatistic": {
      "type": "object",
      "properties": {
        "application_ids": {
          "$ref": "#/definitions/v3ApplicationIdentifiers"
        },
        "active_devices": {
          "type": "integer",
          "format": "int64"
        },
        "average_packet_error_rate": {
          "type": "number",
          "format": "float"
        }
      },
      "description": "Applications statistic."
    },
    "v3ApplicationsStatistics": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationsStatistic"
          }
        }
      },
      "description": "Applications statistics."
    },
    "v3AuthenticationProvider": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3AuthenticationProviderIdentifiers"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "allow_registrations": {
          "type": "boolean"
        },
        "configuration": {
          "$ref": "#/definitions/v3AuthenticationProviderConfiguration"
        },
        "allowed_email_domains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allowed email domains for this provider.\nIf this field is set, only emails with the specified domains will be allowed to login.\nThe server also skips checking the `email_verified` field of the claims token.\nWe highly recommend admins of such providers to not allow\nusers to change their email addresses with the provider due to lack of verification."
        }
      }
    },
    "v3AuthenticationProviderConfiguration": {
      "type": "object",
      "properties": {
        "oidc": {
          "$ref": "#/definitions/AuthenticationProviderOIDC"
        }
      }
    },
    "v3AuthenticationProviderIdentifiers": {
      "type": "object",
      "properties": {
        "provider_id": {
          "type": "string"
        }
      }
    },
    "v3AuthenticationProviders": {
      "type": "object",
      "properties": {
        "providers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3AuthenticationProvider"
          }
        }
      }
    },
    "v3BatchGetTenantRegistryTotalsRequest": {
      "type": "object",
      "properties": {
        "tenant_ids": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3TenantIdentifiers"
          }
        },
        "field_mask": {
          "type": "string"
        }
      }
    },
    "v3BatchGetTenantRegistryTotalsResponse": {
      "type": "object",
      "properties": {
        "totals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3BatchTenantRegistryTotals"
          }
        }
      }
    },
    "v3BatchTenantRegistryTotals": {
      "type": "object",
      "properties": {
        "tenant_ids": {
          "$ref": "#/definitions/v3TenantIdentifiers"
        },
        "totals": {
          "$ref": "#/definitions/v3TenantRegistryTotals"
        }
      }
    },
    "v3Billing": {
      "type": "object",
      "properties": {
        "counting": {
          "$ref": "#/definitions/v3EntityCounting"
        },
        "stripe": {
          "$ref": "#/definitions/BillingStripe"
        },
        "aws_saas_marketplace": {
          "$ref": "#/definitions/BillingAWSSaaSMarketplace"
        }
      }
    },
    "v3BillingIdentifiers": {
      "type": "object",
      "properties": {
        "billing_id": {
          "type": "string"
        }
      }
    },
    "v3ChannelLoRaPerformance": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "agg_lora_rssi": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "float"
          },
          "description": "Aggregated observed LoRa RSSI (channel RSSI adjusted for SNR) per frequency (Hz)."
        }
      },
      "description": "LoRa performance per channel."
    },
    "v3ChannelPacketCount": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "count": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "uint64"
          },
          "description": "Packet counts per frequency (Hz)."
        }
      },
      "description": "Packet count per channel."
    },
    "v3ChannelUtilization": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "utilization": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "float"
          },
          "description": "Utilization (fraction of time) per frequency (Hz) that the channel is in use."
        }
      },
      "description": "Utilization per channel."
    },
    "v3ChannelsLoRaPerformance": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ChannelLoRaPerformance"
          }
        }
      },
      "description": "LoRa performance of channels."
    },
    "v3ChannelsPacketCount": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ChannelPacketCount"
          }
        }
      },
      "description": "Packet counts of channels."
    },
    "v3ChannelsUtilization": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ChannelUtilization"
          }
        }
      },
      "description": "Utilizations of channels."
    },
    "v3ConnectedTimeBucket": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "count": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Number of entities connected in a time bucket."
    },
    "v3ConnectedTimeBuckets": {
      "type": "object",
      "properties": {
        "hourly_buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ConnectedTimeBucket"
          }
        },
        "daily_buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ConnectedTimeBucket"
          }
        },
        "weekly_buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ConnectedTimeBucket"
          }
        }
      },
      "description": "Number of entities connected."
    },
    "v3ContactInfo": {
      "type": "object",
      "properties": {
        "contact_type": {
          "$ref": "#/definitions/v3ContactType"
        },
        "contact_method": {
          "$ref": "#/definitions/v3ContactMethod"
        },
        "value": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        },
        "validated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v3ContactMethod": {
      "type": "string",
      "enum": [
        "CONTACT_METHOD_OTHER",
        "CONTACT_METHOD_EMAIL",
        "CONTACT_METHOD_PHONE"
      ],
      "default": "CONTACT_METHOD_OTHER"
    },
    "v3ContactType": {
      "type": "string",
      "enum": [
        "CONTACT_TYPE_OTHER",
        "CONTACT_TYPE_ABUSE",
        "CONTACT_TYPE_BILLING",
        "CONTACT_TYPE_TECHNICAL"
      ],
      "default": "CONTACT_TYPE_OTHER"
    },
    "v3CreateAuthenticationProviderRequest": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v3AuthenticationProvider"
        }
      }
    },
    "v3CreateTenantRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "$ref": "#/definitions/v3Tenant"
        },
        "initial_user": {
          "$ref": "#/definitions/v3User"
        }
      }
    },
    "v3DataRatePacketCount": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "count": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "uint64"
          },
          "description": "Packet counts per data rate."
        }
      }
    },
    "v3DataRatesPacketCount": {
      "type": "object",
      "properties": {
        "data_rates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3DataRatePacketCount"
          }
        }
      }
    },
    "v3EndDeviceIdentifiers": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string"
        },
        "application_ids": {
          "$ref": "#/definitions/v3ApplicationIdentifiers"
        },
        "dev_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "The LoRaWAN DevEUI."
        },
        "join_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
        },
        "dev_addr": {
          "type": "string",
          "format": "string",
          "example": "2600ABCD",
          "description": "The LoRaWAN DevAddr."
        }
      }
    },
    "v3EndDevicesActiveMetrics": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3EndDeviceIdentifiers"
          }
        }
      },
      "description": "Identifiers of active end devices."
    },
    "v3EndDevicesStatistic": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "$ref": "#/definitions/v3EndDeviceIdentifiers"
        },
        "application_ids": {
          "$ref": "#/definitions/v3ApplicationIdentifiers"
        },
        "last_seen": {
          "type": "string",
          "format": "date-time"
        },
        "last_packet_error_rate": {
          "type": "number",
          "format": "float"
        }
      },
      "description": "End devices statistic."
    },
    "v3EndDevicesStatistics": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3EndDevicesStatistic"
          }
        }
      },
      "description": "End devices statistics."
    },
    "v3EntityCounting": {
      "type": "object",
      "properties": {
        "end_devices": {
          "$ref": "#/definitions/EntityCountingEntityCountingType"
        }
      }
    },
    "v3ExternalUser": {
      "type": "object",
      "properties": {
        "user_ids": {
          "$ref": "#/definitions/v3UserIdentifiers"
        },
        "provider_ids": {
          "$ref": "#/definitions/v3AuthenticationProviderIdentifiers"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "external_id": {
          "type": "string"
        }
      }
    },
    "v3GatewayConnectionEvent": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "event_type": {
          "$ref": "#/definitions/v3GatewayConnectionEventType"
        }
      },
      "description": "Gateway connection event."
    },
    "v3GatewayConnectionEventType": {
      "type": "string",
      "enum": [
        "GATEWAY_CONNECTION_EVENT_TYPE_CONNECT",
        "GATEWAY_CONNECTION_EVENT_TYPE_DISCONNECT",
        "GATEWAY_CONNECTION_EVENT_TYPE_STATS"
      ],
      "default": "GATEWAY_CONNECTION_EVENT_TYPE_CONNECT",
      "description": "Gateway connection event type.\n\n - GATEWAY_CONNECTION_EVENT_TYPE_CONNECT: The gateway connects.\n - GATEWAY_CONNECTION_EVENT_TYPE_DISCONNECT: The gateway disconnects.\n - GATEWAY_CONNECTION_EVENT_TYPE_STATS: The gateway connection statistics are updated."
    },
    "v3GatewayConnectionEventTypeValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v3GatewayConnectionEventType"
        }
      }
    },
    "v3GatewayConnectionEvents": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3GatewayConnectionEvent"
          }
        }
      },
      "description": "Gateway connection events."
    },
    "v3GatewayConnectivityTimes": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "$ref": "#/definitions/v3GatewayIdentifiers"
        },
        "last_connect": {
          "type": "string",
          "format": "date-time"
        },
        "last_disconnect": {
          "type": "string",
          "format": "date-time"
        },
        "uptime": {
          "type": "number",
          "format": "float",
          "description": "Fraction of time that the gateway was active.\nThis is typically aggregated in time buckets of at least 5 minutes or 1 hour depending on the query window."
        },
        "packet_rate_last_hour": {
          "type": "number",
          "format": "float",
          "description": "Packet rate (uplink and downlink) of the last hour."
        },
        "disconnects": {
          "type": "string",
          "format": "uint64",
          "description": "Number of disconnects."
        }
      },
      "description": "Connectivity times of a gateway."
    },
    "v3GatewayIdentifiers": {
      "type": "object",
      "properties": {
        "gateway_id": {
          "type": "string"
        },
        "eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "Secondary identifier, which can only be used in specific requests."
        }
      }
    },
    "v3GatewayStatistics": {
      "type": "object",
      "properties": {
        "gateway_id": {
          "$ref": "#/definitions/v3GatewayIdentifiers"
        },
        "best_channel_rssi": {
          "type": "number",
          "format": "float"
        },
        "packet_count": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v3GatewayTimeWindowQuery": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "$ref": "#/definitions/v3GatewayIdentifiers"
        },
        "time_window": {
          "$ref": "#/definitions/v3TimeWindowQuery"
        }
      },
      "description": "Request for gateway data in a specific time window."
    },
    "v3GatewayTopNetworksSeen": {
      "type": "object",
      "properties": {
        "networks": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "float"
          },
          "description": "Proportion of network by name. The proportions are a fraction of 1. The remaining number is the rest total."
        }
      },
      "description": "Networks seen by a gateway."
    },
    "v3GatewaysActiveMetrics": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3GatewayIdentifiers"
          }
        }
      },
      "description": "Identifiers of active gateways."
    },
    "v3GatewaysConnectivityTimes": {
      "type": "object",
      "properties": {
        "gateways": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3GatewayConnectivityTimes"
          }
        }
      },
      "description": "Connectivity times of gateways."
    },
    "v3GetNocConfigurationResponse": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/v3NocConfiguration"
        }
      }
    },
    "v3NocConfiguration": {
      "type": "object",
      "properties": {
        "access": {
          "$ref": "#/definitions/v3NocConfigurationAccess"
        }
      }
    },
    "v3NocConfigurationAccess": {
      "type": "object",
      "properties": {
        "extended": {
          "type": "boolean"
        }
      }
    },
    "v3PacketErrorRatesTimeBuckets": {
      "type": "object",
      "properties": {
        "packet_error_rates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PacketErrorRatesTimeBucketsPacketErrorRate"
          }
        }
      }
    },
    "v3Picture": {
      "type": "object",
      "properties": {
        "embedded": {
          "$ref": "#/definitions/PictureEmbedded",
          "description": "Embedded picture.\nOmitted if there are external URLs available (in sizes)."
        },
        "sizes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "URLs of the picture for different sizes, if available on a CDN."
        }
      }
    },
    "v3State": {
      "type": "string",
      "enum": [
        "STATE_REQUESTED",
        "STATE_APPROVED",
        "STATE_REJECTED",
        "STATE_FLAGGED",
        "STATE_SUSPENDED"
      ],
      "default": "STATE_REQUESTED",
      "description": "State enum defines states that an entity can be in.\n\n - STATE_REQUESTED: Denotes that the entity has been requested and is pending review by an admin.\n - STATE_APPROVED: Denotes that the entity has been reviewed and approved by an admin.\n - STATE_REJECTED: Denotes that the entity has been reviewed and rejected by an admin.\n - STATE_FLAGGED: Denotes that the entity has been flagged and is pending review by an admin.\n - STATE_SUSPENDED: Denotes that the entity has been reviewed and suspended by an admin."
    },
    "v3Tenant": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3TenantIdentifiers"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "contact_info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ContactInfo"
          }
        },
        "max_applications": {
          "type": "string",
          "format": "uint64",
          "description": "If set, restricts the maximum number of applications that can be created."
        },
        "max_clients": {
          "type": "string",
          "format": "uint64",
          "description": "If set, restricts the maximum number of clients that can be created."
        },
        "max_end_devices": {
          "type": "string",
          "format": "uint64",
          "description": "If set, restricts the maximum number of end_devices that can be created."
        },
        "max_gateways": {
          "type": "string",
          "format": "uint64",
          "description": "If set, restricts the maximum number of gateways that can be created."
        },
        "max_organizations": {
          "type": "string",
          "format": "uint64",
          "description": "If set, restricts the maximum number of organizations that can be created."
        },
        "max_users": {
          "type": "string",
          "format": "uint64",
          "description": "If set, restricts the maximum number of users that can be created."
        },
        "state": {
          "$ref": "#/definitions/v3State",
          "description": "The reviewing state of the tenant.\nThis field can only be modified by tenant admins.\nIf state_description is not updated when updating state, state_description is cleared."
        },
        "state_description": {
          "type": "string",
          "description": "A description for the state field.\nThis field can only be modified by admins, and should typically only be updated\nwhen also updating `state`."
        },
        "capabilities": {
          "type": "object"
        },
        "configuration": {
          "$ref": "#/definitions/lorawanv3Configuration"
        },
        "billing": {
          "$ref": "#/definitions/v3Billing"
        },
        "billing_identifiers": {
          "$ref": "#/definitions/v3BillingIdentifiers"
        }
      },
      "description": "Tenant is the message that defines a Tenant in the network."
    },
    "v3TenantIdentifiers": {
      "type": "object",
      "properties": {
        "tenant_id": {
          "type": "string"
        }
      }
    },
    "v3TenantRegistryTotals": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "string",
          "format": "uint64"
        },
        "clients": {
          "type": "string",
          "format": "uint64"
        },
        "end_devices": {
          "type": "string",
          "format": "uint64"
        },
        "activated_end_devices": {
          "type": "string",
          "format": "uint64"
        },
        "gateways": {
          "type": "string",
          "format": "uint64"
        },
        "organizations": {
          "type": "string",
          "format": "uint64"
        },
        "users": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v3Tenants": {
      "type": "object",
      "properties": {
        "tenants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3Tenant"
          }
        }
      }
    },
    "v3TimeBucketQuery": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "type": "string",
          "format": "date-time"
        },
        "bucket_interval": {
          "type": "string"
        }
      },
      "description": "Request for data using aggregates by time buckets with a specified interval."
    },
    "v3TimeWindowQuery": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "Request for data in a specific time window."
    },
    "v3TrafficRatesTimeBuckets": {
      "type": "object",
      "properties": {
        "uplink": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TrafficRatesTimeBucketsDirection"
          }
        },
        "downlink": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TrafficRatesTimeBucketsDirection"
          }
        }
      },
      "description": "Uplink and downlink message rates over time."
    },
    "v3User": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3UserIdentifiers",
          "description": "The identifiers of the user. These are public and can be seen by any authenticated user in the network."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the user was created. This information is public and can be seen by any authenticated user in the network."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the user was last updated. This information is public and can be seen by any authenticated user in the network."
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the user was deleted. This information is public and can be seen by any authenticated user in the network."
        },
        "name": {
          "type": "string",
          "description": "The name of the user. This information is public and can be seen by any authenticated user in the network."
        },
        "description": {
          "type": "string",
          "description": "A description for the user. This information is public and can be seen by any authenticated user in the network."
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value attributes for this users. Typically used for storing integration-specific data."
        },
        "contact_info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ContactInfo"
          },
          "description": "Contact information for this user. Typically used to indicate who to contact with security/billing questions about the user.\nThis field is deprecated."
        },
        "primary_email_address": {
          "type": "string",
          "description": "Primary email address that can be used for logging in.\nThis address is not public, use contact_info for that."
        },
        "primary_email_address_validated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the primary email address was validated. Note that email address validation is not required on all networks."
        },
        "password": {
          "type": "string",
          "description": "The password field is only considered when creating a user.\nIt is not returned on API calls, and can not be updated by updating the User.\nSee the UpdatePassword method of the UserRegistry service for more information."
        },
        "password_updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "require_password_update": {
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/v3State",
          "description": "The reviewing state of the user.\nThis information is public and can be seen by any authenticated user in the network.\nThis field can only be modified by admins."
        },
        "state_description": {
          "type": "string",
          "description": "A description for the state field.\nThis field can only be modified by admins, and should typically only be updated\nwhen also updating `state`."
        },
        "admin": {
          "type": "boolean",
          "description": "This user is an admin.\nThis information is public and can be seen by any authenticated user in the network.\nThis field can only be modified by other admins."
        },
        "temporary_password": {
          "type": "string",
          "description": "The temporary password can only be used to update a user's password; never returned on API calls.\nIt is not returned on API calls, and can not be updated by updating the User.\nSee the CreateTemporaryPassword method of the UserRegistry service for more information."
        },
        "temporary_password_created_at": {
          "type": "string",
          "format": "date-time"
        },
        "temporary_password_expires_at": {
          "type": "string",
          "format": "date-time"
        },
        "profile_picture": {
          "$ref": "#/definitions/v3Picture",
          "description": "A profile picture for the user.\nThis information is public and can be seen by any authenticated user in the network."
        },
        "application_limit": {
          "type": "string",
          "format": "uint64",
          "description": "The maximum number of applications of the user.\nThis field can only be modified by admins."
        },
        "client_limit": {
          "type": "string",
          "format": "uint64",
          "description": "The maximum number of clients of the user.\nThis field can only be modified by admins."
        },
        "gateway_limit": {
          "type": "string",
          "format": "uint64",
          "description": "The maximum number of gateways of the user.\nThis field can only be modified by admins."
        },
        "organization_limit": {
          "type": "string",
          "format": "uint64",
          "description": "The maximum number of organizations of the user.\nThis field can only be modified by admins."
        }
      },
      "description": "User is the message that defines a user on the network."
    },
    "v3UserIdentifiers": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "This ID shares namespace with organization IDs."
        },
        "email": {
          "type": "string",
          "description": "Secondary identifier, which can only be used in specific requests."
        }
      }
    }
  }
}
