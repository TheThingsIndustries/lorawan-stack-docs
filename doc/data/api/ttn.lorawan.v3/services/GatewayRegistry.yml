name: GatewayRegistry
comment: |-
  The GatewayRegistry service, exposed by the Identity Server, is used to manage
  gateway registrations.
methods:
  Create:
    name: Create
    comment: |-
      Create a new gateway. This also sets the given organization or user as
      first collaborator with all possible rights.
    input:
      name: CreateGatewayRequest
    output:
      name: Gateway
    http:
    - method: POST
      path: /users/{collaborator.user_ids.user_id}/gateways
    - method: POST
      path: /organizations/{collaborator.organization_ids.organization_id}/gateways
  Get:
    name: Get
    comment: |-
      Get the gateway with the given identifiers, selecting the fields specified
      in the field mask.
      More or less fields may be returned, depending on the rights of the caller.
    input:
      name: GetGatewayRequest
    output:
      name: Gateway
    http:
    - method: GET
      path: /gateways/{gateway_ids.gateway_id}
  GetIdentifiersForEUI:
    name: GetIdentifiersForEUI
    comment: Get the identifiers of the gateway that has the given EUI registered.
    input:
      name: GetGatewayIdentifiersForEUIRequest
    output:
      name: GatewayIdentifiers
  List:
    name: List
    comment: |-
      List gateways where the given user or organization is a direct collaborator.
      If no user or organization is given, this returns the gateways the caller
      has access to.
      Similar to Get, this selects the fields given by the field mask.
      More or less fields may be returned, depending on the rights of the caller.
    input:
      name: ListGatewaysRequest
    output:
      name: Gateways
    http:
    - method: GET
      path: /gateways
    - method: GET
      path: /users/{collaborator.user_ids.user_id}/gateways
    - method: GET
      path: /organizations/{collaborator.organization_ids.organization_id}/gateways
  Update:
    name: Update
    comment: Update the gateway, changing the fields specified by the field mask to
      the provided values.
    input:
      name: UpdateGatewayRequest
    output:
      name: Gateway
    http:
    - method: PUT
      path: /gateways/{gateway.ids.gateway_id}
  Delete:
    name: Delete
    comment: Delete the gateway. This may not release the gateway ID for reuse, but
      it does release the EUI.
    input:
      name: GatewayIdentifiers
    output:
      package: google.protobuf
      name: Empty
    http:
    - method: DELETE
      path: /gateways/{gateway_id}
  Restore:
    name: Restore
    comment: |-
      Restore a recently deleted gateway. This does not restore the EUI,
      as that was released when deleting the gateway.

      Deployment configuration may specify if, and for how long after deletion,
      entities can be restored.
    input:
      name: GatewayIdentifiers
    output:
      package: google.protobuf
      name: Empty
    http:
    - method: POST
      path: /gateways/{gateway_id}/restore
  Purge:
    name: Purge
    comment: |-
      Purge the gateway. This will release both gateway ID and EUI for reuse.
      The gateway owner is responsible for clearing data from any (external) integrations
      that may store and expose data by gateway ID.
    input:
      name: GatewayIdentifiers
    output:
      package: google.protobuf
      name: Empty
    http:
    - method: DELETE
      path: /gateways/{gateway_id}/purge
